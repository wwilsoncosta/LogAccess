@{
    ViewBag.Title = "Log de Acesso";
}
@{
    ViewBag.Title = "Titulo da página específica";
    Layout = "~/Views/Shared/_LayoutSite.cshtml";

}

@using Chart.Mvc.ComplexChart;
@using Chart.Mvc.Extensions

<h3 class="badge bg-secondary">@ViewBag.Message</h3>

<meta name="viewport" content="width=device-width, initial-scale=1">

<style>
    /* Style The Dropdown Button */
    .dropbtn {
        background-color: #4CAF50;
        color: white;
        padding: 12px;
        font-size: 12px;
        border: none;
        cursor: pointer;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
        border-bottom-right-radius: 3px;
        border-bottom-left-radius: 3px;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        min-width: 280px;
        background-color: #f9f9f9;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        /* Links inside the dropdown */
        .dropdown-content a {
            color: black;
            text-decoration: none;
            display: block;
        }

            /* Change color of dropdown links on hover */
            .dropdown-content a:hover {
                background-color: #f1f1f1
            }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    /* Change the background color of the dropdown button when the dropdown content is shown */
    .dropdown:hover .dropbtn {
        background-color: #3e8e41;
    }
</style>

<table class="table">
    <tr>
        <td>
            <div class="dropdown">
                <button class="btn btn-primary">Selecione o usuário</button>
                <div class="dropdown-content">
                    @foreach (var item in ViewBag.LogUsuarios)
                    {
                        <a href="/Home/LogAcesso/@item.UsuarioId">@item.Nome</a>
                    }
                </div>
            </div>
        </td>
        <td>
        <td>
            <form action="/Home/ExportFile" method="post">
                <input type="hidden" id="UsuarioId" name="UsuarioId" value="@ViewBag.UsuarioSelecionado" />
                <div class="col-md-6 offset-md-4">
                    <button type="submit" class="btn btn-primary">
                        Exportar XML
                    </button>
                </div>
            </form>
        </td>
        <td>
            <div class="alert alert-warning" role="alert">
                Os arquivos são segrados na pasta "C:\Temp"
            </div>
        </td>
    </tr>
</table>
<table class="table table-striped table-hover">
    <tr>
        <th>Nome</th>
        <th>Ip de acesso</th>
        <th class="text-center">Data/Hora de acesso</th>
    </tr>
    @foreach (var item in ViewBag.LogAcesso)
    {
        <tr>
            <td class="text-left">@item.Nome</td>
            <td class="text-left">@item.ipAcesso</td>
            <td class="text-center">@item.DataHoraAcesso</td>
        </tr>
    }
</table>

<script src="~/Scripts/Chart.js"></script>

@{
    ViewBag.Title = "Home Page";

    var accesscount = ViewBag.LogCountAccess;

    List<double> total = new List<double>();


    foreach (var itemHora in accesscount)
    {
        total.Add(itemHora.quantidade);
    }
    var horas = new[] { "00", "01", "02", "03", "04", "06", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" };
    var valores = total;

    var barChart = new BarChart();
    barChart.ComplexData.Labels.AddRange(horas);



    barChart.ComplexData.Datasets.AddRange(new List<ComplexDataset>
   {
                              new ComplexDataset
                                  {
                                      Data = valores,
                                      Label = "Total de acessos por hora",
                                      FillColor = "rgba(290,220,220,0.2)",
                                      StrokeColor = "rgba(290,220,220,1)",
                                      PointColor = "rgba(220,220,220,1)",
                                      PointStrokeColor = "#fff",
                                      PointHighlightFill = "#fff",
                                      PointHighlightStroke = "rgba(220,220,220,1)",
                                  }
                          });
}
<canvas id="acessoHoras" width="800" height="300">Total de acessos por hora</canvas>
@Html.CreateChart("acessoHoras", barChart)


